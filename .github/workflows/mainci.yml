name: MainCI

on: [push, pull_request]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Prepare (ubuntu)
      run: |
           sudo apt-get update
           sudo apt-get install -y gcc-10 g++-10
           sudo apt-get install -y clang-tidy
           sudo apt-get install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
      if: matrix.os == 'ubuntu-latest'

    - name: Configure (ubuntu)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_VERBOSE_MAKEFILE=ON
      env:
        CC:   gcc-10
        CXX:  g++-10
      if: matrix.os == 'ubuntu-latest'

    - name: Configure (windows)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_VERBOSE_MAKEFILE=ON
      if: matrix.os == 'windows-latest'

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
